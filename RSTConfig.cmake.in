
GET_FILENAME_COMPONENT(RST_CONFIG_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

# interface to raw protocol files
SET(RST_ROOT ${CONFIG_DIR})
FOREACH(F @PROTO_FILES@)
    SET(RSTFILES_WITH_ROOT ${RSTFILES_WITH_ROOT} "${RST_ROOT}/${F}")
ENDFOREACH()
SET(RST_FILES ${RSTFILES_WITH_ROOT})

# C++ library interface
IF(NOT RST_CONFIG_PROCESSED)
    SET(RST_CONFIG_PROCESSED TRUE)

    SET(RSC_DIR "@RSC_DIR@" CACHE PATH "RSC location")
    FIND_PACKAGE(RSC REQUIRED)
    SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${RSC_CMAKE_MODULE_PATH}")

    SET(PROTOBUF_ROOT "@PROTOBUF_ROOT@" CACHE PATH "Protobuf location")
    FIND_PACKAGE(ProtocolBuffers REQUIRED)
    IF(NOT PROTOBUF_LIBRARY)
        MESSAGE(FATAL_ERROR "protobuf library not found")
    ENDIF()

    SET(RST_INCLUDE_DIRS "${RST_CONFIG_DIR}/../../include" ${RSC_INCLUDE_DIRS} ${PROTOBUF_INCLUDE_DIR})
    SET(RST_RUNTIME_LIBRARY_DIRS "${RST_CONFIG_DIR}/../../bin" ${RSC_RUNTIME_LIBRARY_DIRS} ${PROTOBUF_RUNTIME_LIBRARY_DIRS})

    # Expose rst library as an imported target (from the point of view
    # of the downstream project)
    INCLUDE("${RST_CONFIG_DIR}/RSTDepends.cmake")
    SET(RST_LIBRARIES @CPP_NAME@)
    SET(RST_CFLAGS @RST_CFLAGS@)
ENDIF()
