GET_FILENAME_COMPONENT(RST_CONFIG_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

# interface to raw protocol files

SET(STABLE_PROTOS_REL @STABLE_PROTOS_REL@)
SET(STABLE_PACKAGES_REL @STABLE_PACKAGES_REL@)
SET(SANDBOX_PROTOS_REL @SANDBOX_PROTOS_REL@)
SET(SANDBOX_PACKAGES_REL @SANDBOX_PACKAGES_REL@)

FOREACH(DOMAIN stable sandbox)
    STRING(TOUPPER ${DOMAIN} DOMAIN_UPPER)

    SET(RST_${DOMAIN_UPPER}_PROTO_ROOT "${RST_CONFIG_DIR}/proto/${DOMAIN}")

    # Ordinary message description files.
    SET(RST_${DOMAIN_UPPER}_PROTOS)
    FOREACH(F ${${DOMAIN_UPPER}_PROTOS_REL})
        LIST(APPEND RST_${DOMAIN_UPPER}_PROTOS "${RST_CONFIG_DIR}/${F}")
    ENDFOREACH()

    # Package description files.
    SET(RST_${DOMAIN_UPPER}_PACKAGES)
    FOREACH(F ${${DOMAIN_UPPER}_PACKAGES_REL})
        LIST(APPEND RST_${DOMAIN_UPPER}_PACKAGES "${RST_CONFIG_DIR}/${F}")
    ENDFOREACH()

ENDFOREACH()

# determine whether the sandbox is required
SET(USE_SANDBOX FALSE)
FOREACH(COMPONENT ${RST_FIND_COMPONENTS})
    IF(COMPONENT STREQUAL "sandbox")
        SET(USE_SANDBOX TRUE)
    ELSE()
        MESSAGE(SEND_ERROR "Unknown component ${COMPONENT} requested")
    ENDIF()
ENDFOREACH()


IF(EXISTS "${RST_CONFIG_DIR}/../CMakeCache.txt")
    INCLUDE("${RST_CONFIG_DIR}/RSTBuildTreeSettings.cmake")
ELSE()

    SET(RST_INCLUDE_DIRS "${RST_CONFIG_DIR}/../../include/rst/stable")
    SET(RST_RUNTIME_LIBRARY_DIRS "${RST_CONFIG_DIR}/../../bin")

    # sandbox additions
    IF(USE_SANDBOX)
        LIST(APPEND RST_INCLUDE_DIRS "${RST_CONFIG_DIR}/../../include/rst/sandbox")
    ENDIF()

ENDIF()

SET(RSC_DIR "@RSC_DIR@" CACHE PATH "RSC location")
FIND_PACKAGE(RSC REQUIRED)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${RSC_CMAKE_MODULE_PATH}")

SET(PROTOBUF_ROOT "@PROTOBUF_ROOT@" CACHE PATH "Protobuf location")
FIND_PACKAGE(ProtocolBuffers REQUIRED)
IF(NOT PROTOBUF_LIBRARY)
    MESSAGE(FATAL_ERROR "protobuf library not found")
ENDIF()

LIST(APPEND RST_INCLUDE_DIRS ${RSC_INCLUDE_DIRS} ${PROTOBUF_INCLUDE_DIR})
LIST(APPEND RST_RUNTIME_LIBRARY_DIRS ${RSC_RUNTIME_LIBRARY_DIRS} ${PROTOBUF_RUNTIME_LIBRARY_DIRS})

# Expose RST library as an imported target (from the point of view
# of the downstream project)
IF(NOT RST_CONFIG_PROCESSED)
    SET(RST_CONFIG_PROCESSED TRUE)
    INCLUDE("${RST_CONFIG_DIR}/RSTDepends.cmake")
ENDIF()
SET(RST_LIBRARIES @STABLE_NAME@)
SET(RST_CFLAGS "@RST_CFLAGS@")

# invariant sandbox additions
IF(USE_SANDBOX)
    LIST(APPEND RST_LIBRARIES "@SANDBOX_NAME@")
    LIST(APPEND RST_CFLAGS "@RSTSANDBOX_CFLAGS@")
ENDIF()
