
FIND_PACKAGE(Threads REQUIRED)

INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_BINARY_DIR})

IF(WIN32)
    ADD_DEFINITIONS("/DRST_EXPORT=__declspec(dllexport)")
ELSE()
    ADD_DEFINITIONS("-DRST_EXPORT=")
ENDIF()

PROTOBUF_GENERATE(CPP CPP_STABLE_SOURCES CPP_STABLE_HEADERS
                  EXPORT_MACRO RST_EXPORT
                  PROTOFILES ${STABLE_PROTOS}
                  PROTOROOT ${STABLE_ROOT}
                  OUTPATH ${CMAKE_CURRENT_BINARY_DIR})

# version stuff
INCLUDE(PadString)
PAD_STRING(MAJOR_PADDED 2 "0" ${RST_VERSION_MAJOR})
PAD_STRING(MINOR_PADDED 2 "0" ${RST_VERSION_MINOR})
PAD_STRING(PATCH_PADDED 2 "0" ${RST_VERSION_PATCH})
SET(RST_VERSION_NUMERIC "${MAJOR_PADDED}${MINOR_PADDED}${PATCH_PADDED}")
CONFIGURE_FILE(rst/RSTVersion.cpp.in "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.cpp" @ONLY)
CONFIGURE_FILE(rst/RSTVersion.h.in "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.h" @ONLY)
LIST(APPEND CPP_STABLE_HEADERS "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.h")

INCLUDE_DIRECTORIES(BEFORE "${CMAKE_CURRENT_BINARY_DIR}/rst")
ADD_LIBRARY(${STABLE_NAME} SHARED ${CPP_STABLE_SOURCES} ${CPP_STABLE_HEADERS}
                                  "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.cpp"
                                  "${CMAKE_CURRENT_BINARY_DIR}/rst/RSTVersion.h")
TARGET_LINK_LIBRARIES(${STABLE_NAME} ${PROTOBUF_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
INSTALL(TARGETS ${STABLE_NAME}
        EXPORT RSTDepends
        ARCHIVE DESTINATION lib
        LIBRARY DESTINATION lib
        RUNTIME DESTINATION bin)

INSTALL_FILES_RECURSIVE("include/rst/stable/" CPP_STABLE_HEADERS)
