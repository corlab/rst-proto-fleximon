
GET_FILENAME_COMPONENT(RSTSANDBOX_CONFIG_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

# interface to raw protocol files
SET(RSTSANDBOX_ROOT ${CONFIG_DIR})
FOREACH(F @PROTO_FILES@)
    SET(RSTFILES_WITH_ROOT ${RSTFILES_WITH_ROOT} "${RSTSANDBOX_ROOT}/${F}")
ENDFOREACH()
SET(RSTSANDBOX_FILES ${RSTFILES_WITH_ROOT})

# C++ library interface
IF(NOT RSTSANDBOX_CONFIG_PROCESSED)
    SET(RSTSANDBOX_CONFIG_PROCESSED TRUE)

    SET(RSC_DIR "@RSC_DIR@" CACHE PATH "RSC location")
    FIND_PACKAGE(RSC REQUIRED)
    SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${RSC_CMAKE_MODULE_PATH}")

    SET(PROTOBUF_ROOT "@PROTOBUF_ROOT@" CACHE PATH "Protobuf location")
    FIND_PACKAGE(ProtocolBuffers REQUIRED)
    IF(NOT PROTOBUF_LIBRARY)
        MESSAGE(FATAL_ERROR "protobuf library not found")
    ENDIF()

    SET(RSTSANDBOX_INCLUDE_DIRS "${RSTSANDBOX_CONFIG_DIR}/../../include/rstsandbox" ${RSC_INCLUDE_DIRS} ${PROTOBUF_INCLUDE_DIR})
    SET(RSTSANDBOX_RUNTIME_LIBRARY_DIRS "${RSTSANDBOX_CONFIG_DIR}/../../bin" ${RSC_RUNTIME_LIBRARY_DIRS} ${PROTOBUF_RUNTIME_LIBRARY_DIRS})

    # Expose rst library as an imported target (from the point of view
    # of the downstream project)
    INCLUDE("${RSTSANDBOX_CONFIG_DIR}/RSTSandboxDepends.cmake")
    SET(RSTSANDBOX_LIBRARIES @SANDBOX_NAME@)
    SET(RSTSANDBOX_CFLAGS "@RST_CFLAGS@")

    SET(RSTSANDBOX_VERSION @RST_VERSION@)
ENDIF()
